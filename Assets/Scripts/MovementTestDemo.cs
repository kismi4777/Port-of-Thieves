using UnityEngine;

public class MovementTestDemo : MonoBehaviour
{
    [Header("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è")]
    public PrefabSpawner spawner;
    public GameObject testPrefab;
    public float testDuration = 10f;
    
    private GameObject testObject;
    private bool isMoving = false;
    private Vector3 startPosition;
    
    void Start()
    {
        if (spawner == null)
        {
            spawner = FindObjectOfType<PrefabSpawner>();
        }
        
        if (spawner == null)
        {
            Debug.LogError("PrefabSpawner –Ω–µ –Ω–∞–π–¥–µ–Ω!");
            enabled = false;
            return;
        }
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º spawner –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        spawner.SetDraggingProtection(true);
        spawner.SetAutoCleanup(true);
        spawner.SetObjectLifetime(5f);
        
        Debug.Log("=== –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–Ø –î–í–ò–ñ–ï–ù–ò–Ø ===");
        Debug.Log("1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ–±—ä–µ–∫—Ç");
        CreateTestObject();
        
        Debug.Log("2. –û–±—ä–µ–∫—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥, –ï–°–õ–ò –æ–Ω –Ω–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ—Ç—Å—è");
        Debug.Log("3. –ù–∞–∂–º–∏—Ç–µ –ü–†–û–ë–ï–õ –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –≤–∑—è—Ç–∏—è –æ–±—ä–µ–∫—Ç–∞");
        Debug.Log("4. –ù–∞–∂–º–∏—Ç–µ R –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞");
    }
    
    void Update()
    {
        if (testObject == null) return;
        
        // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–º—É–ª—è—Ü–∏–µ–π –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
        if (Input.GetKeyDown(KeyCode.Space) && !isMoving)
        {
            StartDragging();
        }
        
        if (Input.GetKeyDown(KeyCode.R) && isMoving)
        {
            StopDragging();
        }
        
        // –î–≤–∏–∂–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø—Ä–∏ —Å–∏–º—É–ª—è—Ü–∏–∏ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
        if (isMoving)
        {
            testObject.transform.position += Vector3.right * Time.deltaTime * 2f;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if (Time.frameCount % 60 == 0) // –ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
        {
            int draggedCount = spawner.GetDraggedObjectsCount();
            int totalCount = spawner.GetSpawnedObjectsCount();
            Debug.Log($"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –í—Å–µ–≥–æ –æ–±—ä–µ–∫—Ç–æ–≤: {totalCount}, –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º—ã—Ö: {draggedCount}");
        }
    }
    
    void CreateTestObject()
    {
        if (testPrefab != null)
        {
            testObject = Instantiate(testPrefab, transform.position, Quaternion.identity);
            testObject.name = "MovementTestObject";
            startPosition = testObject.transform.position;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –≤ spawner –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
            spawner.SpawnPrefabAtPosition(testObject.transform.position);
        }
        else
        {
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –∫—É–± –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            testObject = GameObject.CreatePrimitive(PrimitiveType.Cube);
            testObject.transform.position = transform.position;
            testObject.name = "MovementTestCube";
            startPosition = testObject.transform.position;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –≤ spawner –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
            spawner.SpawnPrefabAtPosition(testObject.transform.position);
        }
    }
    
    void StartDragging()
    {
        isMoving = true;
        if (spawner != null)
        {
            spawner.MarkObjectAsDragging(testObject);
        }
        Debug.Log("üîÑ –û–ë–™–ï–ö–¢ –í–ó–Ø–¢ –î–õ–Ø –ü–ï–†–ï–¢–ê–°–ö–ò–í–ê–ù–ò–Ø - –æ–Ω –ù–ï –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!");
    }
    
    void StopDragging()
    {
        isMoving = false;
        if (spawner != null)
        {
            spawner.MarkObjectAsDropped(testObject);
        }
        Debug.Log("‚èπÔ∏è –û–ë–™–ï–ö–¢ –û–¢–ü–£–©–ï–ù - —Ç–µ–ø–µ—Ä—å –æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏");
    }
    
    [ContextMenu("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –æ–±—ä–µ–∫—Ç")]
    public void CreateNewTestObject()
    {
        if (testObject != null)
        {
            DestroyImmediate(testObject);
        }
        CreateTestObject();
    }
    
    [ContextMenu("–ù–∞—á–∞—Ç—å –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ")]
    public void StartDraggingFromMenu()
    {
        StartDragging();
    }
    
    [ContextMenu("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ")]
    public void StopDraggingFromMenu()
    {
        StopDragging();
    }
}
